From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Raymond Zhao <raymondzhao@microsoft.com>
Date: Thu, 11 Mar 2021 15:43:44 -0800
Subject: feat: Add frame param to Find

This patch adds the ability to search within a subtree of frames,
rather than from the WebContents representing an entire frame.
This way, Electron apps which require the ability to search only within
a frame can use this feature.

diff --git a/content/browser/find_request_manager.cc b/content/browser/find_request_manager.cc
index 09eb4d6b45669f98ac649b24cd440159f2b043c5..b4fcbe0f925f9784c45d3e23b5ff94842e089050 100644
--- a/content/browser/find_request_manager.cc
+++ b/content/browser/find_request_manager.cc
@@ -222,8 +222,9 @@ FindRequestManager::FindRequest::FindRequest() = default;
 FindRequestManager::FindRequest::FindRequest(
     int id,
     const base::string16& search_text,
-    blink::mojom::FindOptionsPtr options)
-    : id(id), search_text(search_text), options(std::move(options)) {}
+    blink::mojom::FindOptionsPtr options,
+    RenderFrameHost* search_frame)
+    : id(id), search_text(search_text), options(std::move(options)), search_frame(search_frame) {}
 
 FindRequestManager::FindRequest::FindRequest(const FindRequest& request)
     : id(request.id),
@@ -237,6 +238,7 @@ FindRequestManager::FindRequest& FindRequestManager::FindRequest::operator=(
   id = request.id;
   search_text = request.search_text;
   options = request.options.Clone();
+  search_frame = request.search_frame;
   return *this;
 }
 
@@ -269,7 +271,8 @@ FindRequestManager::~FindRequestManager() = default;
 
 void FindRequestManager::Find(int request_id,
                               const base::string16& search_text,
-                              blink::mojom::FindOptionsPtr options) {
+                              blink::mojom::FindOptionsPtr options,
+                              RenderFrameHost* rfh) {
   // Every find request must have a unique ID, and these IDs must strictly
   // increase so that newer requests always have greater IDs than older
   // requests.
@@ -280,7 +283,7 @@ void FindRequestManager::Find(int request_id,
   if (options->new_session)
     find_request_queue_ = base::queue<FindRequest>();
 
-  find_request_queue_.emplace(request_id, search_text, std::move(options));
+  find_request_queue_.emplace(request_id, search_text, std::move(options), rfh);
   if (find_request_queue_.size() == 1)
     FindInternal(find_request_queue_.front());
 }
@@ -596,8 +599,9 @@ void FindRequestManager::FindInternal(const FindRequest& request) {
     // one, or the first frame with matches otherwise.
     RenderFrameHost* target_rfh =
         contents_->GetFocusedWebContents()->GetFocusedFrame();
-    if (!target_rfh || !CheckFrame(target_rfh))
-      target_rfh = GetInitialFrame(request.options->forward);
+    if (!target_rfh || !CheckFrame(target_rfh)) {
+      target_rfh = GetInitialFrame(request.options->forward, request.search_frame);
+    }
 
     SendFindRequest(request, target_rfh);
     current_request_ = request;
@@ -607,6 +611,15 @@ void FindRequestManager::FindInternal(const FindRequest& request) {
 
   // This is an initial find operation.
   Reset(request);
+
+  if (request.search_frame) {
+    // We passed in a frame, so just start searching in the frames under it
+    for (RenderFrameHost* frame: request.search_frame->GetFramesInSubtree()) {
+      AddFrame(frame, false /* force */);
+    }
+    return;
+  }
+
   for (WebContentsImpl* contents : contents_->GetWebContentsAndAllInner()) {
     // Portals can't receive keyboard events or be focused, so we don't return
     // find results inside a portal.
@@ -660,11 +673,11 @@ void FindRequestManager::NotifyFindReply(int request_id, bool final_update) {
     last_reported_id_ = request_id;
 
   contents_->NotifyFindReply(request_id, number_of_matches_, selection_rect_,
-                             active_match_ordinal_, final_update);
+                             active_match_ordinal_, final_update, active_frame_);
 }
 
-RenderFrameHost* FindRequestManager::GetInitialFrame(bool forward) const {
-  RenderFrameHost* rfh = contents_->GetMainFrame();
+RenderFrameHost* FindRequestManager::GetInitialFrame(bool forward, RenderFrameHost* fallback_frame) const {
+  RenderFrameHost* rfh = fallback_frame ? fallback_frame : contents_->GetMainFrame();
 
   if (!forward)
     rfh = GetDeepestLastChild(rfh);
@@ -790,7 +803,7 @@ void FindRequestManager::FinalUpdateReceived(int request_id,
                           true /* matches_only */, true /* wrap */);
   } else {
     // Otherwise, the first frame with matches will have the active match.
-    target_rfh = GetInitialFrame(current_request_.options->forward);
+    target_rfh = GetInitialFrame(current_request_.options->forward, current_request_.search_frame);
     if (!CheckFrame(target_rfh) ||
         !find_in_page_clients_[target_rfh]->number_of_matches()) {
       target_rfh = Traverse(target_rfh, current_request_.options->forward,
@@ -846,7 +859,7 @@ void FindRequestManager::RemoveFindMatchRectsPendingReply(
   if (match_rects_.request_version != match_rects_.known_version) {
     // Request version is stale, so aggregate and report the newer find
     // match rects. The rects should be aggregated in search order.
-    for (RenderFrameHost* frame = GetInitialFrame(true /* forward */); frame;
+    for (RenderFrameHost* frame = GetInitialFrame(true /* forward */, nullptr); frame;
          frame = Traverse(frame, true /* forward */, true /* matches_only */,
                           false /* wrap */)) {
       auto frame_it = match_rects_.frame_rects.find(frame);
diff --git a/content/browser/find_request_manager.h b/content/browser/find_request_manager.h
index 8c85cbbcc39e93ebb751bd6a30aadd09b557a7d1..a285bb60ae244d5bc04fa6a7c80ec2e809fb3344 100644
--- a/content/browser/find_request_manager.h
+++ b/content/browser/find_request_manager.h
@@ -38,9 +38,12 @@ class CONTENT_EXPORT FindRequestManager {
 
   // Initiates a find operation for |search_text| with the options specified in
   // |options|. |request_id| uniquely identifies the find request.
+  // If |rfh| is provided, we search just that frame and its subframes,
+  // rather than the entire web contents.
   void Find(int request_id,
             const base::string16& search_text,
-            blink::mojom::FindOptionsPtr options);
+            blink::mojom::FindOptionsPtr options,
+            RenderFrameHost* rfh);
 
   // Stops the active find session and clears the general highlighting of the
   // matches. |action| determines whether the last active match (if any) will be
@@ -125,10 +128,14 @@ class CONTENT_EXPORT FindRequestManager {
     // The set of find options in effect for this find request.
     blink::mojom::FindOptionsPtr options;
 
+    // The frame to start the search from.
+    RenderFrameHost* search_frame;
+
     FindRequest();
     FindRequest(int id,
                 const base::string16& search_text,
-                blink::mojom::FindOptionsPtr options);
+                blink::mojom::FindOptionsPtr options,
+                RenderFrameHost* search_frame);
     FindRequest(const FindRequest& request);
     ~FindRequest();
 
@@ -152,7 +159,8 @@ class CONTENT_EXPORT FindRequestManager {
 
   // Returns the initial frame in search order. This will be either the first
   // frame, if searching forward, or the last frame, if searching backward.
-  RenderFrameHost* GetInitialFrame(bool forward) const;
+  // |fallback_frame| is used instead of the first frame if it is passed in.
+  RenderFrameHost* GetInitialFrame(bool forward, RenderFrameHost* fallback_frame) const;
 
   // Traverses the frame tree to find and return the next RenderFrameHost after
   // |from_rfh| in search order. |forward| indicates whether the frame tree
diff --git a/content/browser/web_contents/web_contents_impl.cc b/content/browser/web_contents/web_contents_impl.cc
index cefe0bab7ab42c8b0697cb64fc687545251f7410..e4c9e8d4decc7339eb3cb552f3675071a4c278fa 100644
--- a/content/browser/web_contents/web_contents_impl.cc
+++ b/content/browser/web_contents/web_contents_impl.cc
@@ -4965,7 +4965,8 @@ int WebContentsImpl::DownloadImageInFrame(
 
 void WebContentsImpl::Find(int request_id,
                            const base::string16& search_text,
-                           blink::mojom::FindOptionsPtr options) {
+                           blink::mojom::FindOptionsPtr options,
+                           RenderFrameHost *rfh) {
   OPTIONAL_TRACE_EVENT0("content", "WebContentsImpl::Find");
   // Cowardly refuse to search for no text.
   if (search_text.empty()) {
@@ -4974,7 +4975,7 @@ void WebContentsImpl::Find(int request_id,
   }
 
   GetOrCreateFindRequestManager()->Find(request_id, search_text,
-                                        std::move(options));
+                                        std::move(options), rfh);
 }
 
 void WebContentsImpl::StopFinding(StopFindAction action) {
@@ -7973,11 +7974,12 @@ void WebContentsImpl::NotifyFindReply(int request_id,
                                       int number_of_matches,
                                       const gfx::Rect& selection_rect,
                                       int active_match_ordinal,
-                                      bool final_update) {
+                                      bool final_update,
+                                      RenderFrameHost* active_frame) {
   OPTIONAL_TRACE_EVENT0("content", "WebContentsImpl::NotifyFindReply");
   if (delegate_ && !is_being_destroyed_ &&
       !GetMainFrame()->GetProcess()->FastShutdownStarted()) {
-    delegate_->FindReply(this, request_id, number_of_matches, selection_rect,
+    delegate_->FindReply(this, active_frame, request_id, number_of_matches, selection_rect,
                          active_match_ordinal, final_update);
   }
 }
diff --git a/content/browser/web_contents/web_contents_impl.h b/content/browser/web_contents/web_contents_impl.h
index f9fd8ebc471af32ad7158a0054f1b2dc6098026d..e67e5ab0fb449b84e81a51f11a5fc000d6228f98 100644
--- a/content/browser/web_contents/web_contents_impl.h
+++ b/content/browser/web_contents/web_contents_impl.h
@@ -512,7 +512,8 @@ class CONTENT_EXPORT WebContentsImpl : public WebContents,
       WebContents::ImageDownloadCallback callback) override;
   void Find(int request_id,
             const base::string16& search_text,
-            blink::mojom::FindOptionsPtr options) override;
+            blink::mojom::FindOptionsPtr options,
+            RenderFrameHost* rfh) override;
   void StopFinding(StopFindAction action) override;
   bool WasEverAudible() override;
   void GetManifest(GetManifestCallback callback) override;
@@ -1071,7 +1072,8 @@ class CONTENT_EXPORT WebContentsImpl : public WebContents,
                        int number_of_matches,
                        const gfx::Rect& selection_rect,
                        int active_match_ordinal,
-                       bool final_update);
+                       bool final_update,
+                       RenderFrameHost* active_frame);
 
   // Modify the counter of connected devices for this WebContents.
   void IncrementBluetoothConnectedDeviceCount();
diff --git a/content/public/browser/web_contents.h b/content/public/browser/web_contents.h
index 79af85209da3ca2d6eb7bc27f97e5becad7312e4..42aee9ae200a4c2af0eb595e247eb82c03b50c73 100644
--- a/content/public/browser/web_contents.h
+++ b/content/public/browser/web_contents.h
@@ -1000,7 +1000,8 @@ class WebContents : public PageNavigator,
   // Finds text on a page. |search_text| should not be empty.
   virtual void Find(int request_id,
                     const base::string16& search_text,
-                    blink::mojom::FindOptionsPtr options) = 0;
+                    blink::mojom::FindOptionsPtr options,
+                    RenderFrameHost* rfh) = 0;
 
   // Notifies the renderer that the user has closed the FindInPage window
   // (and what action to take regarding the selection).
diff --git a/content/public/browser/web_contents_delegate.h b/content/public/browser/web_contents_delegate.h
index d19b7ba1cbb686f72ce6989052e5f91d54a086e6..c16f27882e32d1948a62579e811e3349070f2f43 100644
--- a/content/public/browser/web_contents_delegate.h
+++ b/content/public/browser/web_contents_delegate.h
@@ -489,6 +489,7 @@ class CONTENT_EXPORT WebContentsDelegate {
   // found and the selection rect (in screen coordinates) for the string found.
   // If |final_update| is false, it indicates that more results follow.
   virtual void FindReply(WebContents* web_contents,
+                         RenderFrameHost* active_frame,
                          int request_id,
                          int number_of_matches,
                          const gfx::Rect& selection_rect,
diff --git a/extensions/browser/guest_view/web_view/web_view_find_helper.cc b/extensions/browser/guest_view/web_view/web_view_find_helper.cc
index 95cb7df01c341491adff7c06d6718cdb9c6ec61e..422af49d614ed6d6f09f342939f490a6c61ccaba 100644
--- a/extensions/browser/guest_view/web_view/web_view_find_helper.cc
+++ b/extensions/browser/guest_view/web_view/web_view_find_helper.cc
@@ -136,7 +136,7 @@ void WebViewFindHelper::Find(
   }
 
   guest_web_contents->Find(current_find_request_id_, search_text,
-                           std::move(full_options));
+                           std::move(full_options), nullptr);
 }
 
 void WebViewFindHelper::FindReply(int request_id,
diff --git a/extensions/browser/guest_view/web_view/web_view_guest.cc b/extensions/browser/guest_view/web_view/web_view_guest.cc
index b1a48537daee7ceb5b790b09fa330e0ba12a5ecd..4c68cdf3d168265735714bfa48f76fed48830d91 100644
--- a/extensions/browser/guest_view/web_view/web_view_guest.cc
+++ b/extensions/browser/guest_view/web_view/web_view_guest.cc
@@ -645,12 +645,13 @@ void WebViewGuest::CloseContents(WebContents* source) {
 }
 
 void WebViewGuest::FindReply(WebContents* source,
+                             RenderFrameHost* active_frame,
                              int request_id,
                              int number_of_matches,
                              const gfx::Rect& selection_rect,
                              int active_match_ordinal,
                              bool final_update) {
-  GuestViewBase::FindReply(source, request_id, number_of_matches,
+  GuestViewBase::FindReply(source, active_frame, request_id, number_of_matches,
                            selection_rect, active_match_ordinal, final_update);
   find_helper_.FindReply(request_id, number_of_matches, selection_rect,
                          active_match_ordinal, final_update);
diff --git a/extensions/browser/guest_view/web_view/web_view_guest.h b/extensions/browser/guest_view/web_view/web_view_guest.h
index 83ae752376204a76ff0e213f12505d656bce5480..18226896aeefb0d726aa0f3b3d5d81044d20f374 100644
--- a/extensions/browser/guest_view/web_view/web_view_guest.h
+++ b/extensions/browser/guest_view/web_view/web_view_guest.h
@@ -193,6 +193,7 @@ class WebViewGuest : public guest_view::GuestView<WebViewGuest> {
   void DidInitialize(const base::DictionaryValue& create_params) final;
   void EmbedderFullscreenToggled(bool entered_fullscreen) final;
   void FindReply(content::WebContents* source,
+                 content::RenderFrameHost* active_frame,
                  int request_id,
                  int number_of_matches,
                  const gfx::Rect& selection_rect,
