From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Micha Hanselmann <micha.hanselmann@gmail.com>
Date: Thu, 23 Jun 2022 10:24:56 +0200
Subject: build: fix building with enable_basic_printing false

While Chromium builds fine with the buildflag enable_basic_printing set to false,
Electron requires a couple adjustments.

diff --git a/BUILD.gn b/BUILD.gn
index c46cbf1bec22c36b97fde5601ca9b2966ee80933..edf371d10bcac60db878c56c55e7244afa9106a9 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -960,7 +960,6 @@ if (is_win) {
       "//media:media_unittests",
       "//media/midi:midi_unittests",
       "//net:net_unittests",
-      "//printing:printing_unittests",
       "//sql:sql_unittests",
       "//third_party/breakpad:symupload($host_toolchain)",
       "//ui/base:ui_base_unittests",
@@ -969,6 +968,10 @@ if (is_win) {
       "//ui/views:views_unittests",
       "//url:url_unittests",
     ]
+
+    if (enable_basic_printing) {
+      deps += [ "//printing:printing_unittests" ]
+    }
   }
 }
 
diff --git a/content/browser/BUILD.gn b/content/browser/BUILD.gn
index 6fe723b5b4b645cb3d007787db2217bcaec7c257..e89d8b20aa27ac940e78d374ded9bca25940d3db 100644
--- a/content/browser/BUILD.gn
+++ b/content/browser/BUILD.gn
@@ -2733,8 +2733,9 @@ source_set("browser") {
       "//ppapi/shared_impl",
     ]
 
-    assert(enable_basic_printing)
-    deps += [ "//printing" ]
+    if (enable_basic_printing) {
+      deps += [ "//printing" ]
+    }
 
     if (is_chromeos_ash) {
       sources += [
diff --git a/content/browser/utility_sandbox_delegate_win.cc b/content/browser/utility_sandbox_delegate_win.cc
index 75f0fade966646dc7e738c87a3300be1603ec7b7..27f71aef278781c214dc430af7cd16f32483e559 100644
--- a/content/browser/utility_sandbox_delegate_win.cc
+++ b/content/browser/utility_sandbox_delegate_win.cc
@@ -95,6 +95,7 @@ bool NetworkPreSpawnTarget(sandbox::TargetPolicy* policy) {
   return true;
 }
 
+#if BUILDFLAG(ENABLE_PRINTING)
 // Sets the sandbox policy for the print backend service process.
 bool PrintBackendPreSpawnTarget(sandbox::TargetPolicy* policy) {
   // Print Backend policy lockdown level must be at least USER_LIMITED and
@@ -105,6 +106,7 @@ bool PrintBackendPreSpawnTarget(sandbox::TargetPolicy* policy) {
   policy->SetDelayedIntegrityLevel(sandbox::INTEGRITY_LEVEL_LOW);
   return true;
 }
+#endif
 }  // namespace
 
 bool UtilitySandboxedProcessLauncherDelegate::GetAppContainerId(
