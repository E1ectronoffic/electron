name: Build MacOS

on:
  push:
    branches:
      - gh-mac-runner
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

env:
  GCLIENT_EXTRA_ARGS: '--custom-var=checkout_mac=True --custom-var=host_os=mac --custom-var=host_cpu=arm64'
  IS_RELEASE: false

jobs:
  install-dependencies:
    runs-on: macos-13-xlarge

    steps:
    - name: Checkout Electron
      uses: actions/checkout@v4
      with:
        path: src/electron
    - name: Install Azure CLI
      run: |
        brew update && brew install azure-cli
    - name: Setup Node/NPM
      uses: actions/setup-node@v3
      with:
        node-version: 18.18.x
        cache: yarn
        cache-dependency-path: src/electron/yarn.lock
    - name: Enable ssh debugging
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      with:
        detached: true
        limit-access-to-actor: true
    - run: |
        cd src/electron
        node script/yarn install
    # step-depot-tools-get, L248
    - name: Get Depot Tools 
      run: |
        git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
        # remove ninjalog_uploader_wrapper.py from autoninja since we don't use it and it causes problems
        sed -i '' '/ninjalog_uploader_wrapper.py/d' ./depot_tools/autoninja
        # Ensure depot_tools does not update.
        test -d depot_tools && cd depot_tools
        touch .disable_auto_update
    - run: echo "$PWD/depot_tools" >> $GITHUB_PATH
    - run: echo "$PATH"
    # step-gclient-sync, L287
    # TODO(vertedinde): Re-enable sync after SSH debug integration is working
    # - name: Gclient Sync
    #   run: |
    #     # If we did not restore a complete sync then we need to sync for realz
    #     if [ ! -s "src/electron/.circle-sync-done" ]; then
    #       gclient config \
    #         --name "src/electron" \
    #         --unmanaged \
    #         $GCLIENT_EXTRA_ARGS \
    #         "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY"

    #       ELECTRON_USE_THREE_WAY_MERGE_FOR_PATCHES=1 gclient sync --with_branch_heads --with_tags -vvvvv
    #       if [ "$IS_RELEASE" != "true" ]; then
    #         Re-export all the patches to check if there were changes.
    #         python3 src/electron/script/export_all_patches.py src/electron/patches/config.json
    #         cd src/electron
    #         git update-index --refresh || true
    #         TODO(vertedinde): Let's not stress on patchup right now, just sync it
    #         if ! git diff-index --quiet HEAD --; then
    #           # There are changes to the patches. Make a git commit with the updated patches
    #           git add patches
    #           GIT_COMMITTER_NAME="PatchUp" GIT_COMMITTER_EMAIL="73610968+patchup[bot]@users.noreply.github.com" git commit -m "chore: update patches" --author="PatchUp <73610968+patchup[bot]@users.noreply.github.com>"
    #           # Export it
    #           mkdir -p ../../patches
    #           git format-patch -1 --stdout --keep-subject --no-stat --full-index > ../../patches/update-patches.patch
    #           if (node ./script/push-patch.js 2> /dev/null > /dev/null); then
    #             echo
    #             echo "======================================================================"
    #             echo "Changes to the patches when applying, we have auto-pushed the diff to the current branch"
    #             echo "A new CI job will kick off shortly"
    #             echo "======================================================================"
    #             exit 1
    #           else
    #             echo
    #             echo "======================================================================"
    #             echo "There were changes to the patches when applying."
    #             echo "Check the CI artifacts for a patch you can apply to fix it."
    #             echo "======================================================================"
    #             exit 1
    #           fi
    #         fi
    #       fi
    #     fi
    #       # step-gclient-sync, L976
    # - name: Generate DEPS Hash
    #   run: |
    #     node src/electron/script/generate-deps-hash.js && cat src/electron/.depshash-target
    # - name: Minimize the size of the cache
    #   run: |
    #     cd src
    #     rm -rf src/android_webview
    #     rm -rf src/ios/chrome
    #     rm -rf src/third_party/blink/web_tests
    #     rm -rf src/third_party/blink/perf_tests
    #     rm -rf third_party/electron_node/deps/openssl
    #     rm -rf third_party/electron_node/deps/v8
    #     rm -rf chrome/test/data/xr/webvr_info
    #     rm -rf src/third_party/angle/third_party/VK-GL-CTS/src
    #     rm -rf src/third_party/swift-toolchain
    #     rm -rf src/third_party/swiftshader/tests/regres/testlists
    # - name: Generate & Upload Azure CLI Blob
    #   run: |
    #     # sudo code
